{"version":3,"file":"commonHelpers.js","sources":["../src/js/pixabay-api.js","../src/js/render-functions.js","../src/main.js"],"sourcesContent":["const BASE_URL = 'https://pixabay.com/api/';\nconst apiKey = '43905959-78fd6b1a15a9bfecd4ebaa3d3';\n\nexport const fetchPhotosByQuery = (query = 'dog') => {\n  const searchParams = new URLSearchParams({\n    key: apiKey,\n    q: query,\n    image_type: 'photo',\n    orientation: 'horizontal',\n    safesearch: 'true',\n  });\n  return fetch(`${BASE_URL}?${searchParams}`).then(response => {\n    if (!response.ok) {\n      throw new Error(\n        `Sorry, there are no images matching your search query. Please try again!`\n      );\n    }\n    return response.json();\n  });\n};\n","'use strict';\n\nexport const createGalleryItemMarkup = images => {\n  return images\n    .map(\n      image =>\n        `\n      <li class=\"gallery-item\">\n        <a class=\"gallery-link\" href=\"${image.largeImageURL}\">\n          <img\n            class=\"gallery-image\"\n            src=\"${image.webformatURL}\"\n            alt=\"${image.tags}\"\n          />\n          <ul class=\"gallery-card\">\n            <li>\n              <p>likes</p>\n              <p>${image.likes}</p>\n            </li>\n            <li>\n              <p>views</p>\n              <p>${image.views}</p>\n            </li>\n            <li>\n              <p>comments</p>\n              <p>${image.comments}</p>\n            </li>\n            <li>\n              <p>downloads</p>\n              <p>${image.downloads}</p>\n            </li>\n          </ul>\n        </a>\n      </li>`\n    )\n    .join('');\n};\n","import iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\n\nimport SimpleLightbox from 'simplelightbox';\nimport 'simplelightbox/dist/simple-lightbox.min.css';\n\nimport { fetchPhotosByQuery } from './js/pixabay-api';\nimport { createGalleryItemMarkup } from './js/render-functions';\n\nconst searchForm = document.querySelector('.search-form');\nconst searchquery = document.querySelector('.input-search');\nconst btnSearch = document.querySelector('.btn-search');\nconst galleryEl = document.querySelector('.gallery');\nconst galleryItem = document.querySelector('.gallery-item');\nconst galleryLink = document.querySelector('.gallery-link');\nconst galleryImage = document.querySelector('.gallery-image');\nconst galleryCard = document.querySelector('.gallery-card');\nconst loader = document.querySelector('.loader');\n\nfunction onBtnSubmit(event) {\n  event.preventDefault();\n  const searchImages = event.target.elements.searchImages.value.trim();\n\n  if (searchImages === '') {\n    galleryEl.innerHTML = '';\n    event.target.reset();\n    iziToast.error({\n      message: 'Input field can not be empty',\n      position: 'topRight',\n      timeout: 2000,\n      color: 'red',\n    });\n    return;\n  }\n\n  galleryEl.innerHTML = '';\n  loader.classList.remove('is-hidden');\n\n  fetchPhotosByQuery(searchImages)\n    .then(imageData => {\n      if (imageData.total === 0) {\n        iziToast.show({\n          message: 'Sorry, there are no images for this query',\n          position: 'topRight',\n          timeout: 2000,\n          color: 'red',\n        });\n      }\n      galleryEl.innerHTML = createGalleryItemMarkup(imageData.hits);\n      galleryEl.style.display = 'flex';\n      galleryEl.style.flexWrap = 'wrap';\n      galleryEl.style.gap = '20px 24px';\n      galleryEl.style.justifyContent = 'center';\n\n      const galleryLightBox = new SimpleLightbox('.gallery a', {\n        captions: true,\n        captionsData: 'alt',\n        captionDelay: 250,\n      });\n      galleryLightBox.refresh();\n    })\n    .catch(error => console.log(error))\n    .finally(() => {\n      event.target.reset();\n      loader.classList.add('is-hidden');\n    });\n}\n\nsearchForm.addEventListener('submit', onBtnSubmit);\n"],"names":["BASE_URL","apiKey","fetchPhotosByQuery","query","searchParams","response","createGalleryItemMarkup","images","image","searchForm","galleryEl","loader","onBtnSubmit","event","searchImages","iziToast","imageData","SimpleLightbox","error"],"mappings":"6vBAAA,MAAMA,EAAW,2BACXC,EAAS,qCAEFC,EAAqB,CAACC,EAAQ,QAAU,CACnD,MAAMC,EAAe,IAAI,gBAAgB,CACvC,IAAKH,EACL,EAAGE,EACH,WAAY,QACZ,YAAa,aACb,WAAY,MAChB,CAAG,EACD,OAAO,MAAM,GAAGH,CAAQ,IAAII,CAAY,EAAE,EAAE,KAAKC,GAAY,CAC3D,GAAI,CAACA,EAAS,GACZ,MAAM,IAAI,MACR,0EACR,EAEI,OAAOA,EAAS,MACpB,CAAG,CACH,ECjBaC,EAA0BC,GAC9BA,EACJ,IACCC,GACE;AAAA;AAAA,wCAEgCA,EAAM,aAAa;AAAA;AAAA;AAAA,mBAGxCA,EAAM,YAAY;AAAA,mBAClBA,EAAM,IAAI;AAAA;AAAA;AAAA;AAAA;AAAA,mBAKVA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA,mBAIXA,EAAM,KAAK;AAAA;AAAA;AAAA;AAAA,mBAIXA,EAAM,QAAQ;AAAA;AAAA;AAAA;AAAA,mBAIdA,EAAM,SAAS;AAAA;AAAA;AAAA;AAAA,YAK7B,EACA,KAAK,EAAE,EC1BNC,EAAa,SAAS,cAAc,cAAc,EACpC,SAAS,cAAc,eAAe,EACxC,SAAS,cAAc,aAAa,EACtD,MAAMC,EAAY,SAAS,cAAc,UAAU,EAC/B,SAAS,cAAc,eAAe,EACtC,SAAS,cAAc,eAAe,EACrC,SAAS,cAAc,gBAAgB,EACxC,SAAS,cAAc,eAAe,EAC1D,MAAMC,EAAS,SAAS,cAAc,SAAS,EAE/C,SAASC,EAAYC,EAAO,CAC1BA,EAAM,eAAc,EACpB,MAAMC,EAAeD,EAAM,OAAO,SAAS,aAAa,MAAM,OAE9D,GAAIC,IAAiB,GAAI,CACvBJ,EAAU,UAAY,GACtBG,EAAM,OAAO,QACbE,EAAS,MAAM,CACb,QAAS,+BACT,SAAU,WACV,QAAS,IACT,MAAO,KACb,CAAK,EACD,MACD,CAEDL,EAAU,UAAY,GACtBC,EAAO,UAAU,OAAO,WAAW,EAEnCT,EAAmBY,CAAY,EAC5B,KAAKE,GAAa,CACbA,EAAU,QAAU,GACtBD,EAAS,KAAK,CACZ,QAAS,4CACT,SAAU,WACV,QAAS,IACT,MAAO,KACjB,CAAS,EAEHL,EAAU,UAAYJ,EAAwBU,EAAU,IAAI,EAC5DN,EAAU,MAAM,QAAU,OAC1BA,EAAU,MAAM,SAAW,OAC3BA,EAAU,MAAM,IAAM,YACtBA,EAAU,MAAM,eAAiB,SAET,IAAIO,EAAe,aAAc,CACvD,SAAU,GACV,aAAc,MACd,aAAc,GACtB,CAAO,EACe,QAAO,CAC7B,CAAK,EACA,MAAMC,GAAS,QAAQ,IAAIA,CAAK,CAAC,EACjC,QAAQ,IAAM,CACbL,EAAM,OAAO,QACbF,EAAO,UAAU,IAAI,WAAW,CACtC,CAAK,CACL,CAEAF,EAAW,iBAAiB,SAAUG,CAAW"}